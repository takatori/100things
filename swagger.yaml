swagger: "2.0"
info:
  version: 1.0.0
  title: 100things
  description: 100things to Do Before...
  termsOfService: http://swagger.io/terms/
  contact:
    name: takatori
    email: tktr3w5e0@gmail.com
    url: https://github.com/takatori
  license:
    name: MIT
    url: hoge.com
host: hoge.com
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /users:
    get:
      description: |
        Returns all users from the system
      operationId: findUsers
      responses:
        200:
          description: user response
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new user in the store.
      operationId: addUser
      parameters:
        - name: user
          in: body
          description: User to add to the store
          required: true
          schema:
            $ref: '#/definitions/NewUser'
      responses:
        200:
          description: user response
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{user_id}:
    get:
      description: Returns a user based on a single ID
      operationId: find user by id
      parameters:
        - name: user_id
          in: path
          description: ID of use to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: user response
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes a single user based on the ID supplied
      operationId: deleteUser
      parameters:
        - name: user_id
          in: path
          description: ID of user to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: user deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{user_id}/things:
    get:
      description: Returns all things from systems by user_id
      parameters:
        - name: user_id
          in: path
          description: ID of user to fetch things
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: thing response
          schema:
            type: array
            items:
              $ref: '#/definitions/Things'
        default:
          description: unexpected Error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Create a new thing in the store.
      parameters:
        - name: thing
          in: body
          description: Thing to add to the store
          required: true
          schema:
            $ref: '#/definitions/NewThings'
      responses:
        200:
          description: thing response
          schema:
            $ref: '#/definitions/Things'
        default:
          description: unexpected Error
          schema:
            $ref: '#/definitions/Error'
  /users/{user_id}/things/{id}:
    get:
      description: Returns a things based on the ID supplied
      parameters:
        - name: user_id
          in: path
          description: ID of user
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of thing
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: thing response
          schema:
            $ref: '#/definitions/Things'
        default:
          description: unexpected Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: deletes a single thing based on the ID supplied
      parameters:
        - name: user_id
          in: path
          description: ID of user
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of thing
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: thing deleted
        default:
          description: unexpected Error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Things:
    allOf:
      - $ref: '#/definitions/NewThings'
      - rquired:
        - id
        - state
        properties:
          id:
            type: integer
            format: int64
          state:
            type: boolean
  NewThings:
    requreid:
      - content
    properties:
      content:
        type: string
  User:
    allOf:
      - $ref: '#/definitions/NewUser'
      - required:
        - id
        properties:
          id:
            type: integer
            format: int64
  NewUser:
    required:
      - name
    properties:
      name:
        type: string
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string